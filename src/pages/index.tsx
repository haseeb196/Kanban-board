/* eslint-disable @typescript-eslint/no-unsafe-assignment */
/* eslint-disable @typescript-eslint/no-unsafe-call */
import Categories from "@/components/Categories";
import { type RootState, addCategory } from "@/components/Store/store";
import { type Category } from "@/types/categories";
import { Add, ControlPoint, Search, SwapVert } from "@mui/icons-material";
import { Dialog, DialogActions, DialogContent } from "@mui/material";
import Head from "next/head";
import { useState } from "react";
import { useDispatch, useSelector } from "react-redux";

export default function Home() {
  const [dialog, setDialog] = useState<boolean>(false);
  const dispatch = useDispatch();
  const [addedCategory, setAddedCategory] = useState<Category>({
    name: "",
    tasks: [],
  });
  const AllCategories = useSelector((state: RootState) => state.categories);
  const handleDialogClose = () => {
    setDialog(false);
  };
  const handleAddCategory = () => {
    setDialog(false);

    dispatch(addCategory(addedCategory));
  };
  
  return (
    <>
      <Head>
        <title>kanban-board</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="min-h-screen space-y-5 p-5">
        <h1 className="text-3xl font-semibold">Vulnerabilities</h1>
        <div className="flex gap-2">
          <div className="flex items-center gap-2 rounded-lg border-[1px] border-gray-200 px-3 py-[6px] text-sm font-semibold shadow-sm">
            <Search fontSize="small" />
            <input
              type="text"
              className="bg-transparent outline-0"
              placeholder="Search by issue name..."
            />
          </div>

          <button className="flex items-center gap-1 rounded-lg border-[1px] border-gray-200 px-3 py-[6px] text-sm font-semibold shadow-sm transition-colors hover:bg-gray-100">
            <SwapVert fontSize="small" />
            <span>Sort By</span>
          </button>
          <button className="flex items-center gap-2 rounded-lg border-[1px] border-dashed border-gray-200 px-3 py-[6px] text-sm font-semibold shadow-sm transition-colors hover:bg-gray-100">
            <ControlPoint fontSize="small" />
            <span>Severity</span>
          </button>
          <button className="flex items-center gap-2 rounded-lg border-[1px] border-dashed border-gray-200 px-3 py-[6px] text-sm font-semibold shadow-sm transition-colors hover:bg-gray-100">
            <ControlPoint fontSize="small" />
            <span>Status</span>
          </button>
        </div>
        <div className="flex min-h-full gap-5">
          <Categories /> <Categories /> <Categories />
          <div
            onClick={() => setDialog(true)}
            className="flex h-[400px]  min-w-[270px] flex-col items-center justify-center rounded-lg border-[2px] border-dashed border-gray-300 !text-gray-400"
          >
            <Add className="!h-10 !w-10" />
            <p>Add a Category</p>
          </div>
          <Dialog open={dialog} onClose={handleDialogClose}>
            <DialogContent>
              <div className="flex flex-col gap-2">
                <label htmlFor="category-name">Category Name:</label>
                <input
                  type="text"
                  id="category-name"
                  className="rounded-md border-[1px] border-gray-400 px-1 outline-none"
                  placeholder="Enter Name"
                  value={addedCategory.name}
                  onChange={(e) => setAddedCategory({ name: e.target.value })}
                />
              </div>
              <DialogActions>
                <button
                  className="rounded-md bg-sky-400 px-2 py-1"
                  onClick={handleAddCategory}
                >
                  Done
                </button>
              </DialogActions>
            </DialogContent>
          </Dialog>
        </div>
      </main>
    </>
  );
}
